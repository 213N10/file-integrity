name: Create release

on:
  push:
    branches: [ "main", "master" ]

jobs:

  go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # potrzebujemy caÅ‚ej historii

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.x'

      - name: Install dependencies
        run: |
          go mod tidy
          go mod download

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o file-integrity -v ./...

      - name: Create Tag vYEAR.MONTH.NUMBER
        run: |
          git fetch --tags

          YEAR_MONTH=v$(date +'%Y.%m')
          NUM_EXISTING_TAGS=$(git tag -l "v${YEAR_MONTH}.*" | wc -l)
          NTH_BUILD=$((NUM_EXISTING_TAGS + 1))
          TAG_NAME="${YEAR_MONTH}.${NTH_BUILD}"

          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          git tag "${TAG_NAME}"
          git push origin "${TAG_NAME}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./file-integrity
          asset_name: file-integrity
          # chyba niepotrzbne
          # asset_content_type: application/octet-stream
